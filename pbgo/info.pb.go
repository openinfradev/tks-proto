//
//Define messages to create new info to TKS-Info service.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: info.proto

package pbgo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateCSPInfoRequest is used to create a new CSP Info
type CreateCSPInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// contract_id is Global Unique MultiCluster ID
	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// csp_name is a name for users
	CspName string `protobuf:"bytes,2,opt,name=csp_name,json=cspName,proto3" json:"csp_name,omitempty"`
	// auth is an optional. This is an authentication info for IaaS.
	Auth string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
	// type is a cloud service provider type.
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreateCSPInfoRequest) Reset() {
	*x = CreateCSPInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCSPInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCSPInfoRequest) ProtoMessage() {}

func (x *CreateCSPInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCSPInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateCSPInfoRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCSPInfoRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *CreateCSPInfoRequest) GetCspName() string {
	if x != nil {
		return x.CspName
	}
	return ""
}

func (x *CreateCSPInfoRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *CreateCSPInfoRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// GetCSPAuthResponse is used to get an authentication information by
//   csp id.
type GetCSPAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// auth is an authentication info stiringified in JSON.
	Auth string `protobuf:"bytes,3,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *GetCSPAuthResponse) Reset() {
	*x = GetCSPAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCSPAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCSPAuthResponse) ProtoMessage() {}

func (x *GetCSPAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCSPAuthResponse.ProtoReflect.Descriptor instead.
func (*GetCSPAuthResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{1}
}

func (x *GetCSPAuthResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetCSPAuthResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetCSPAuthResponse) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

// UpdateCSPAuthRequest updates an authenticationg information for CSP.
type UpdateCSPAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// csp_id is .
	CspId string `protobuf:"bytes,1,opt,name=csp_id,json=cspId,proto3" json:"csp_id,omitempty"`
	// auth is an authentication info to update.
	Auth string `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *UpdateCSPAuthRequest) Reset() {
	*x = UpdateCSPAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCSPAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCSPAuthRequest) ProtoMessage() {}

func (x *UpdateCSPAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCSPAuthRequest.ProtoReflect.Descriptor instead.
func (*UpdateCSPAuthRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCSPAuthRequest) GetCspId() string {
	if x != nil {
		return x.CspId
	}
	return ""
}

func (x *UpdateCSPAuthRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

// AddClusterInfoRequest is used to add a new cluster info
type AddClusterInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// contract_id is a contract ID.
	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	// csp_id is an ID of CSPInfo.
	CspId string `protobuf:"bytes,2,opt,name=csp_id,json=cspId,proto3" json:"csp_id,omitempty"`
	// cluster_name is a cluster name defined by users
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// conf is a cluster configuration
	Conf *ClusterConf `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *AddClusterInfoRequest) Reset() {
	*x = AddClusterInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddClusterInfoRequest) ProtoMessage() {}

func (x *AddClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*AddClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{3}
}

func (x *AddClusterInfoRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *AddClusterInfoRequest) GetCspId() string {
	if x != nil {
		return x.CspId
	}
	return ""
}

func (x *AddClusterInfoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddClusterInfoRequest) GetConf() *ClusterConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

// UpdateClusterConfRequest is used to update kubernetes cluster configuration
// to correspond with id
type UpdateClusterConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// conf is a kubernetes cluster configuration
	Conf *ClusterConf `protobuf:"bytes,2,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *UpdateClusterConfRequest) Reset() {
	*x = UpdateClusterConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterConfRequest) ProtoMessage() {}

func (x *UpdateClusterConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterConfRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterConfRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateClusterConfRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterConfRequest) GetConf() *ClusterConf {
	if x != nil {
		return x.Conf
	}
	return nil
}

// GetClusterRequest is used to get info of MultiCluster to correspond with id
type GetClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{5}
}

func (x *GetClusterRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// GetClusterResponse contains a cluster info.
type GetClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// cluster is info for the cluster
	Cluster *Cluster `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
}

func (x *GetClusterResponse) Reset() {
	*x = GetClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterResponse) ProtoMessage() {}

func (x *GetClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterResponse.ProtoReflect.Descriptor instead.
func (*GetClusterResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{6}
}

func (x *GetClusterResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetClusterResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetClusterResponse) GetCluster() *Cluster {
	if x != nil {
		return x.Cluster
	}
	return nil
}

// GetClustersRequest returns a list of clusters in specific CSP.
type GetClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// csp_id is a Global Unique ID
	CspId string `protobuf:"bytes,1,opt,name=csp_id,json=cspId,proto3" json:"csp_id,omitempty"`
	// Unique contract ID
	ContractId string `protobuf:"bytes,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
}

func (x *GetClustersRequest) Reset() {
	*x = GetClustersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersRequest) ProtoMessage() {}

func (x *GetClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersRequest.ProtoReflect.Descriptor instead.
func (*GetClustersRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{7}
}

func (x *GetClustersRequest) GetCspId() string {
	if x != nil {
		return x.CspId
	}
	return ""
}

func (x *GetClustersRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

// GetClustersResponse contains an array of cluster infos.
type GetClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// cluster is info. for the cluster
	Clusters []*Cluster `protobuf:"bytes,3,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *GetClustersResponse) Reset() {
	*x = GetClustersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersResponse) ProtoMessage() {}

func (x *GetClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersResponse.ProtoReflect.Descriptor instead.
func (*GetClustersResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{8}
}

func (x *GetClustersResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetClustersResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetClustersResponse) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

// UpdateClusterStatusRequest is used to change status of the cluster
type UpdateClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// status is the clusterstatus to be changed
	Status ClusterStatus `protobuf:"varint,2,opt,name=status,proto3,enum=pbgo.ClusterStatus" json:"status,omitempty"`
}

func (x *UpdateClusterStatusRequest) Reset() {
	*x = UpdateClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClusterStatusRequest) ProtoMessage() {}

func (x *UpdateClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateClusterStatusRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *UpdateClusterStatusRequest) GetStatus() ClusterStatus {
	if x != nil {
		return x.Status
	}
	return ClusterStatus_UNSPECIFIED
}

// CreateAppGroupRequest is used to create a new app group.
type CreateAppGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cluster_id is a cluster ID
	ClusterId string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// app_group is an application group
	AppGroup *AppGroup `protobuf:"bytes,2,opt,name=app_group,json=appGroup,proto3" json:"app_group,omitempty"`
}

func (x *CreateAppGroupRequest) Reset() {
	*x = CreateAppGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAppGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAppGroupRequest) ProtoMessage() {}

func (x *CreateAppGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAppGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateAppGroupRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{10}
}

func (x *CreateAppGroupRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *CreateAppGroupRequest) GetAppGroup() *AppGroup {
	if x != nil {
		return x.AppGroup
	}
	return nil
}

// DeleteAppGroupRequest is used to delete app group.
type DeleteAppGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// app_group_id is an app group id to delete.
	AppGroupId string `protobuf:"bytes,1,opt,name=app_group_id,json=appGroupId,proto3" json:"app_group_id,omitempty"`
}

func (x *DeleteAppGroupRequest) Reset() {
	*x = DeleteAppGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAppGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAppGroupRequest) ProtoMessage() {}

func (x *DeleteAppGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAppGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteAppGroupRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteAppGroupRequest) GetAppGroupId() string {
	if x != nil {
		return x.AppGroupId
	}
	return ""
}

// GetAppGroupsRequest is used to get an array of application infos on cluster
type GetAppGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// app_name is a name of the application
	AppGroupName string `protobuf:"bytes,1,opt,name=app_group_name,json=appGroupName,proto3" json:"app_group_name,omitempty"`
	// app_type is a type of the application
	Type AppGroupType `protobuf:"varint,2,opt,name=type,proto3,enum=pbgo.AppGroupType" json:"type,omitempty"`
}

func (x *GetAppGroupsRequest) Reset() {
	*x = GetAppGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppGroupsRequest) ProtoMessage() {}

func (x *GetAppGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppGroupsRequest.ProtoReflect.Descriptor instead.
func (*GetAppGroupsRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{12}
}

func (x *GetAppGroupsRequest) GetAppGroupName() string {
	if x != nil {
		return x.AppGroupName
	}
	return ""
}

func (x *GetAppGroupsRequest) GetType() AppGroupType {
	if x != nil {
		return x.Type
	}
	return AppGroupType_APP_TYPE_UNSPECIFIED
}

// GetAppGroupRequest returns an array of application groups on the cluster
type GetAppGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// app_group_id is an id of the application group
	AppGroupId string `protobuf:"bytes,1,opt,name=app_group_id,json=appGroupId,proto3" json:"app_group_id,omitempty"`
}

func (x *GetAppGroupRequest) Reset() {
	*x = GetAppGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppGroupRequest) ProtoMessage() {}

func (x *GetAppGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppGroupRequest.ProtoReflect.Descriptor instead.
func (*GetAppGroupRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{13}
}

func (x *GetAppGroupRequest) GetAppGroupId() string {
	if x != nil {
		return x.AppGroupId
	}
	return ""
}

// GetAppGroupResponse contains an array of application groups.
type GetAppGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// app_group is an application group
	AppGroup *AppGroup `protobuf:"bytes,3,opt,name=app_group,json=appGroup,proto3" json:"app_group,omitempty"`
}

func (x *GetAppGroupResponse) Reset() {
	*x = GetAppGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppGroupResponse) ProtoMessage() {}

func (x *GetAppGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppGroupResponse.ProtoReflect.Descriptor instead.
func (*GetAppGroupResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{14}
}

func (x *GetAppGroupResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetAppGroupResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppGroupResponse) GetAppGroup() *AppGroup {
	if x != nil {
		return x.AppGroup
	}
	return nil
}

// GetAppGroupsResponse contains an array of application infos.
type GetAppGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// app_groups is an array of applications
	AppGroups []*AppGroup `protobuf:"bytes,3,rep,name=app_groups,json=appGroups,proto3" json:"app_groups,omitempty"`
}

func (x *GetAppGroupsResponse) Reset() {
	*x = GetAppGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppGroupsResponse) ProtoMessage() {}

func (x *GetAppGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppGroupsResponse.ProtoReflect.Descriptor instead.
func (*GetAppGroupsResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{15}
}

func (x *GetAppGroupsResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetAppGroupsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppGroupsResponse) GetAppGroups() []*AppGroup {
	if x != nil {
		return x.AppGroups
	}
	return nil
}

// UpdateAppGroupStatusRequest is used to change the status of the app
type UpdateAppGroupStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// app_group_id is the application group id to change the status
	AppGroupId string `protobuf:"bytes,1,opt,name=app_group_id,json=appGroupId,proto3" json:"app_group_id,omitempty"`
	// status is a AppStatus of the application
	Status AppGroupStatus `protobuf:"varint,2,opt,name=status,proto3,enum=pbgo.AppGroupStatus" json:"status,omitempty"`
}

func (x *UpdateAppGroupStatusRequest) Reset() {
	*x = UpdateAppGroupStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppGroupStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppGroupStatusRequest) ProtoMessage() {}

func (x *UpdateAppGroupStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppGroupStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppGroupStatusRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateAppGroupStatusRequest) GetAppGroupId() string {
	if x != nil {
		return x.AppGroupId
	}
	return ""
}

func (x *UpdateAppGroupStatusRequest) GetStatus() AppGroupStatus {
	if x != nil {
		return x.Status
	}
	return AppGroupStatus_APP_GROUP_UNSPECIFIED
}

// UpdateAppRequest updates an information of application such as endpoints.
type UpdateAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// app_group_id is the application group id.
	AppGroupId string `protobuf:"bytes,1,opt,name=app_group_id,json=appGroupId,proto3" json:"app_group_id,omitempty"`
	// app_type is a type of the application
	AppType AppType `protobuf:"varint,2,opt,name=app_type,json=appType,proto3,enum=pbgo.AppType" json:"app_type,omitempty"`
	// endpoints is an endpoint string.
	Endpoint string `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// metadata is an unstructured metadata for application.
	Metadata string `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateAppRequest) Reset() {
	*x = UpdateAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAppRequest) ProtoMessage() {}

func (x *UpdateAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAppRequest.ProtoReflect.Descriptor instead.
func (*UpdateAppRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateAppRequest) GetAppGroupId() string {
	if x != nil {
		return x.AppGroupId
	}
	return ""
}

func (x *UpdateAppRequest) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_EP_UNSPECIFIED
}

func (x *UpdateAppRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *UpdateAppRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// GetAppsRequest returns an array of applications
type GetAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// app_group_id is a name of the application
	AppGroupId string `protobuf:"bytes,1,opt,name=app_group_id,json=appGroupId,proto3" json:"app_group_id,omitempty"`
	// app_type is a type of the application
	Type AppType `protobuf:"varint,2,opt,name=type,proto3,enum=pbgo.AppType" json:"type,omitempty"`
}

func (x *GetAppsRequest) Reset() {
	*x = GetAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppsRequest) ProtoMessage() {}

func (x *GetAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppsRequest.ProtoReflect.Descriptor instead.
func (*GetAppsRequest) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{18}
}

func (x *GetAppsRequest) GetAppGroupId() string {
	if x != nil {
		return x.AppGroupId
	}
	return ""
}

func (x *GetAppsRequest) GetType() AppType {
	if x != nil {
		return x.Type
	}
	return AppType_EP_UNSPECIFIED
}

// GetAppsResponse returns an array of applications.
type GetAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is a response code.
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=pbgo.Code" json:"code,omitempty"`
	// error is a detailed error message.
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// app_groups is an array of applications
	Apps []*Application `protobuf:"bytes,3,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *GetAppsResponse) Reset() {
	*x = GetAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_info_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppsResponse) ProtoMessage() {}

func (x *GetAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_info_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppsResponse.ProtoReflect.Descriptor instead.
func (*GetAppsResponse) Descriptor() ([]byte, []int) {
	return file_info_proto_rawDescGZIP(), []int{19}
}

func (x *GetAppsResponse) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_OK_UNSPECIFIED
}

func (x *GetAppsResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetAppsResponse) GetApps() []*Application {
	if x != nil {
		return x.Apps
	}
	return nil
}

var File_info_proto protoreflect.FileDescriptor

var file_info_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x70, 0x62,
	0x67, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x73, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x73, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x41, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x63, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x73, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x15, 0x41, 0x64,
	0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x73, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0x60, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x52, 0x04, 0x63, 0x6f, 0x6e, 0x66, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x73, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x73, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x83, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x68, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x63, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x39, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x61,
	0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x63, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x36, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x88, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d,
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x09, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x6d, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x96, 0x01, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41,
	0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7b, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e,
	0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x32, 0xfe, 0x02, 0x0a, 0x12, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x20, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xca, 0x02, 0x0a, 0x0e, 0x43,
	0x73, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x53, 0x50, 0x49, 0x44, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x53, 0x50, 0x49, 0x44, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67,
	0x6f, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x53, 0x50, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xfe, 0x04, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x70,
	0x62, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x42, 0x79, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x67, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21,
	0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x67, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x67, 0x6f, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6b, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x6b, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x67, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_info_proto_rawDescOnce sync.Once
	file_info_proto_rawDescData = file_info_proto_rawDesc
)

func file_info_proto_rawDescGZIP() []byte {
	file_info_proto_rawDescOnce.Do(func() {
		file_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_info_proto_rawDescData)
	})
	return file_info_proto_rawDescData
}

var file_info_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_info_proto_goTypes = []interface{}{
	(*CreateCSPInfoRequest)(nil),        // 0: pbgo.CreateCSPInfoRequest
	(*GetCSPAuthResponse)(nil),          // 1: pbgo.GetCSPAuthResponse
	(*UpdateCSPAuthRequest)(nil),        // 2: pbgo.UpdateCSPAuthRequest
	(*AddClusterInfoRequest)(nil),       // 3: pbgo.AddClusterInfoRequest
	(*UpdateClusterConfRequest)(nil),    // 4: pbgo.UpdateClusterConfRequest
	(*GetClusterRequest)(nil),           // 5: pbgo.GetClusterRequest
	(*GetClusterResponse)(nil),          // 6: pbgo.GetClusterResponse
	(*GetClustersRequest)(nil),          // 7: pbgo.GetClustersRequest
	(*GetClustersResponse)(nil),         // 8: pbgo.GetClustersResponse
	(*UpdateClusterStatusRequest)(nil),  // 9: pbgo.UpdateClusterStatusRequest
	(*CreateAppGroupRequest)(nil),       // 10: pbgo.CreateAppGroupRequest
	(*DeleteAppGroupRequest)(nil),       // 11: pbgo.DeleteAppGroupRequest
	(*GetAppGroupsRequest)(nil),         // 12: pbgo.GetAppGroupsRequest
	(*GetAppGroupRequest)(nil),          // 13: pbgo.GetAppGroupRequest
	(*GetAppGroupResponse)(nil),         // 14: pbgo.GetAppGroupResponse
	(*GetAppGroupsResponse)(nil),        // 15: pbgo.GetAppGroupsResponse
	(*UpdateAppGroupStatusRequest)(nil), // 16: pbgo.UpdateAppGroupStatusRequest
	(*UpdateAppRequest)(nil),            // 17: pbgo.UpdateAppRequest
	(*GetAppsRequest)(nil),              // 18: pbgo.GetAppsRequest
	(*GetAppsResponse)(nil),             // 19: pbgo.GetAppsResponse
	(Code)(0),                           // 20: pbgo.Code
	(*Error)(nil),                       // 21: pbgo.Error
	(*ClusterConf)(nil),                 // 22: pbgo.ClusterConf
	(*Cluster)(nil),                     // 23: pbgo.Cluster
	(ClusterStatus)(0),                  // 24: pbgo.ClusterStatus
	(*AppGroup)(nil),                    // 25: pbgo.AppGroup
	(AppGroupType)(0),                   // 26: pbgo.AppGroupType
	(AppGroupStatus)(0),                 // 27: pbgo.AppGroupStatus
	(AppType)(0),                        // 28: pbgo.AppType
	(*Application)(nil),                 // 29: pbgo.Application
	(*emptypb.Empty)(nil),               // 30: google.protobuf.Empty
	(*IDRequest)(nil),                   // 31: pbgo.IDRequest
	(*IDResponse)(nil),                  // 32: pbgo.IDResponse
	(*SimpleResponse)(nil),              // 33: pbgo.SimpleResponse
	(*IDsResponse)(nil),                 // 34: pbgo.IDsResponse
}
var file_info_proto_depIdxs = []int32{
	20, // 0: pbgo.GetCSPAuthResponse.code:type_name -> pbgo.Code
	21, // 1: pbgo.GetCSPAuthResponse.error:type_name -> pbgo.Error
	22, // 2: pbgo.AddClusterInfoRequest.conf:type_name -> pbgo.ClusterConf
	22, // 3: pbgo.UpdateClusterConfRequest.conf:type_name -> pbgo.ClusterConf
	20, // 4: pbgo.GetClusterResponse.code:type_name -> pbgo.Code
	21, // 5: pbgo.GetClusterResponse.error:type_name -> pbgo.Error
	23, // 6: pbgo.GetClusterResponse.cluster:type_name -> pbgo.Cluster
	20, // 7: pbgo.GetClustersResponse.code:type_name -> pbgo.Code
	21, // 8: pbgo.GetClustersResponse.error:type_name -> pbgo.Error
	23, // 9: pbgo.GetClustersResponse.clusters:type_name -> pbgo.Cluster
	24, // 10: pbgo.UpdateClusterStatusRequest.status:type_name -> pbgo.ClusterStatus
	25, // 11: pbgo.CreateAppGroupRequest.app_group:type_name -> pbgo.AppGroup
	26, // 12: pbgo.GetAppGroupsRequest.type:type_name -> pbgo.AppGroupType
	20, // 13: pbgo.GetAppGroupResponse.code:type_name -> pbgo.Code
	21, // 14: pbgo.GetAppGroupResponse.error:type_name -> pbgo.Error
	25, // 15: pbgo.GetAppGroupResponse.app_group:type_name -> pbgo.AppGroup
	20, // 16: pbgo.GetAppGroupsResponse.code:type_name -> pbgo.Code
	21, // 17: pbgo.GetAppGroupsResponse.error:type_name -> pbgo.Error
	25, // 18: pbgo.GetAppGroupsResponse.app_groups:type_name -> pbgo.AppGroup
	27, // 19: pbgo.UpdateAppGroupStatusRequest.status:type_name -> pbgo.AppGroupStatus
	28, // 20: pbgo.UpdateAppRequest.app_type:type_name -> pbgo.AppType
	28, // 21: pbgo.GetAppsRequest.type:type_name -> pbgo.AppType
	20, // 22: pbgo.GetAppsResponse.code:type_name -> pbgo.Code
	21, // 23: pbgo.GetAppsResponse.error:type_name -> pbgo.Error
	29, // 24: pbgo.GetAppsResponse.apps:type_name -> pbgo.Application
	3,  // 25: pbgo.ClusterInfoService.AddClusterInfo:input_type -> pbgo.AddClusterInfoRequest
	4,  // 26: pbgo.ClusterInfoService.UpdateClusterConf:input_type -> pbgo.UpdateClusterConfRequest
	5,  // 27: pbgo.ClusterInfoService.GetCluster:input_type -> pbgo.GetClusterRequest
	7,  // 28: pbgo.ClusterInfoService.GetClusters:input_type -> pbgo.GetClustersRequest
	9,  // 29: pbgo.ClusterInfoService.UpdateClusterStatus:input_type -> pbgo.UpdateClusterStatusRequest
	0,  // 30: pbgo.CspInfoService.CreateCSPInfo:input_type -> pbgo.CreateCSPInfoRequest
	30, // 31: pbgo.CspInfoService.GetCSPIDs:input_type -> google.protobuf.Empty
	31, // 32: pbgo.CspInfoService.GetCSPIDsByContractID:input_type -> pbgo.IDRequest
	2,  // 33: pbgo.CspInfoService.UpdateCSPAuth:input_type -> pbgo.UpdateCSPAuthRequest
	31, // 34: pbgo.CspInfoService.GetCSPAuth:input_type -> pbgo.IDRequest
	10, // 35: pbgo.AppInfoService.CreateAppGroup:input_type -> pbgo.CreateAppGroupRequest
	31, // 36: pbgo.AppInfoService.GetAppGroupsByClusterID:input_type -> pbgo.IDRequest
	12, // 37: pbgo.AppInfoService.GetAppGroups:input_type -> pbgo.GetAppGroupsRequest
	13, // 38: pbgo.AppInfoService.GetAppGroup:input_type -> pbgo.GetAppGroupRequest
	16, // 39: pbgo.AppInfoService.UpdateAppGroupStatus:input_type -> pbgo.UpdateAppGroupStatusRequest
	11, // 40: pbgo.AppInfoService.DeleteAppGroup:input_type -> pbgo.DeleteAppGroupRequest
	31, // 41: pbgo.AppInfoService.GetAppsByAppGroupID:input_type -> pbgo.IDRequest
	18, // 42: pbgo.AppInfoService.GetApps:input_type -> pbgo.GetAppsRequest
	17, // 43: pbgo.AppInfoService.UpdateApp:input_type -> pbgo.UpdateAppRequest
	32, // 44: pbgo.ClusterInfoService.AddClusterInfo:output_type -> pbgo.IDResponse
	33, // 45: pbgo.ClusterInfoService.UpdateClusterConf:output_type -> pbgo.SimpleResponse
	6,  // 46: pbgo.ClusterInfoService.GetCluster:output_type -> pbgo.GetClusterResponse
	8,  // 47: pbgo.ClusterInfoService.GetClusters:output_type -> pbgo.GetClustersResponse
	33, // 48: pbgo.ClusterInfoService.UpdateClusterStatus:output_type -> pbgo.SimpleResponse
	32, // 49: pbgo.CspInfoService.CreateCSPInfo:output_type -> pbgo.IDResponse
	34, // 50: pbgo.CspInfoService.GetCSPIDs:output_type -> pbgo.IDsResponse
	34, // 51: pbgo.CspInfoService.GetCSPIDsByContractID:output_type -> pbgo.IDsResponse
	33, // 52: pbgo.CspInfoService.UpdateCSPAuth:output_type -> pbgo.SimpleResponse
	1,  // 53: pbgo.CspInfoService.GetCSPAuth:output_type -> pbgo.GetCSPAuthResponse
	32, // 54: pbgo.AppInfoService.CreateAppGroup:output_type -> pbgo.IDResponse
	15, // 55: pbgo.AppInfoService.GetAppGroupsByClusterID:output_type -> pbgo.GetAppGroupsResponse
	15, // 56: pbgo.AppInfoService.GetAppGroups:output_type -> pbgo.GetAppGroupsResponse
	14, // 57: pbgo.AppInfoService.GetAppGroup:output_type -> pbgo.GetAppGroupResponse
	33, // 58: pbgo.AppInfoService.UpdateAppGroupStatus:output_type -> pbgo.SimpleResponse
	33, // 59: pbgo.AppInfoService.DeleteAppGroup:output_type -> pbgo.SimpleResponse
	19, // 60: pbgo.AppInfoService.GetAppsByAppGroupID:output_type -> pbgo.GetAppsResponse
	19, // 61: pbgo.AppInfoService.GetApps:output_type -> pbgo.GetAppsResponse
	33, // 62: pbgo.AppInfoService.UpdateApp:output_type -> pbgo.SimpleResponse
	44, // [44:63] is the sub-list for method output_type
	25, // [25:44] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_info_proto_init() }
func file_info_proto_init() {
	if File_info_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCSPInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCSPAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCSPAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddClusterInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClustersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClustersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAppGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAppGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppGroupStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_info_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_info_proto_goTypes,
		DependencyIndexes: file_info_proto_depIdxs,
		MessageInfos:      file_info_proto_msgTypes,
	}.Build()
	File_info_proto = out.File
	file_info_proto_rawDesc = nil
	file_info_proto_goTypes = nil
	file_info_proto_depIdxs = nil
}
