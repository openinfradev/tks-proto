/*
  Common.proto contains most commonly used interfaces 
  when communicating between TKS services.
*/
syntax = "proto3";
package tks_pb;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/openinfradev/tks-proto/tks_pb";

// Code is a response code for gRpc request.
enum Code {
  OK_UNSPECIFIED = 0;
  CANCELLED = 1;
  UNKNOWN = 2;
  INVALID_ARGUMENT = 3;
  DEADLINE_EXCEEDED = 4;
  NOT_FOUND = 5;
  ALREADY_EXISTS = 6;
  PERMISSION_DENIED = 7;
  UNAUTHENTICATED = 16;
  RESOURCE_EXHAUSTED = 8;
  FAILED_PRECONDITION = 9;
  ABORTED = 10;
  OUT_OF_RANGE = 11;
  UNIMPLEMENTED = 12;
  INTERNAL = 13;
  UNAVAILABLE = 14;
}

// Error represents a detailed error for gRPC request.
message Error {
  // msg is an error message.
  string msg = 1;
}

// AppGroupStatus represents a status of the application group
enum AppGroupStatus {
  APP_GROUP_UNSPECIFIED = 0;
  APP_GROUP_INSTALLING = 1;
  APP_GROUP_RUNNING = 2;
  APP_GROUP_DELETING = 4;
  APP_GROUP_DELETED = 5;
  APP_GROUP_ERROR = 6;
}

// ClusterStatus represents a status of the cluster
enum ClusterStatus {
  UNSPECIFIED = 0;
  INSTALLING = 1;
  RUNNING = 2;
  DELETING = 4;
  DELETED = 5;
  ERROR = 6;
}

// AppType is a type of application.
enum AppType {
  EP_UNSPECIFIED = 0;
  THANOS = 1;
  PROMETHEUS = 2;
  GRAFANA = 3;
  KIALI = 4;
  KIBANA = 5;
  ELASTICSERCH = 6;
  CLOUD_CONSOLE = 7;
  HORIZON = 8;
  JAEGER = 9;
  KUBERNETES_DASHBOARD = 10;
}

// AppGroupType is types of app group
enum AppGroupType {
  APP_TYPE_UNSPECIFIED = 0;
  LMA = 1;
  SERVICE_MESH = 2;
  LMA_EFK = 3;
}

// CspType is types of cloud service provider
enum CspType {
  CSPTYPE_UNSPECIFIED = 0;
  AWS = 1;
  GCP = 2;
  AZURE = 3;
}

// AppGroup represents an application group such as LMA, ServiceMesh.
message AppGroup {
  // app_group_id for the application group
  string app_group_id = 1;
  // app_group_name is a human-readable name.
  string app_group_name = 2;
  // type (LMA/SERVICE_MESH/LMA_EFK)
  AppGroupType type = 3;
  // cluster_id is a cluster ID to install application.
  string cluster_id = 4;
  // workflow_id is a argo workflow id
  string workflow_id = 5;
  // a status of the application eg) Installing/Running/Error
  AppGroupStatus status = 6;
  // a status description of the application 
  string status_desc = 7;
  // external_lable is the label used for globally unique identification
  string external_label = 8;
  // created_at is  a creatioin timestamp for the application
  google.protobuf.Timestamp created_at = 9;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 10;
  // creator is a user UID of appgroup creator
  string creator = 11;
  // description is a appgroup description
  string description = 12;
}

// Application represents each Application.
message Application {
  //id for the application
  string app_id = 1;
  // type (Prometheus/Grafana/...)
  AppType type = 2;
  // app_group_id is an applicagion group ID.
  string app_group_id = 3;
  // endpoint is a endpoint string.
  string endpoint = 4;
  // metadata is a unstructured information for application.
  string metadata = 5;
  // created_at is  a creatioin timestamp for the application
  google.protobuf.Timestamp created_at = 6;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 7;
}

// Cluster represents each Cluster.
message Cluster {
  // is is a unique id for the cluster
  string id = 1;
  // name is a cluster name for users
  string name = 2;
  // created_at is a creatioin timestamp for the cluster
  google.protobuf.Timestamp created_at = 3;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 4;
  // workflow_id is a argo workflow id
  string workflow_id = 5;
  // status is a status of the cluste eg) Installing/Running/Error
  ClusterStatus status = 6;
  // status_desc is a detail description of the cluster status
  string status_desc = 7;
  // contract_id is a contract ID.
  string contract_id = 8;
  // csp_id is an ID of CSPInfo.
  string csp_id = 9;
  // conf is a kubernete cluster configuration
  ClusterConf conf = 10;
  // app_groups is a array of applications
  repeated AppGroup app_groups = 11;
  // kubeconfig is a default kubeconfig for the cluster
  string kubeconfig = 12;
  // creator is a user UID of cluster creator
  string creator = 13;
  // description is a cluster description
  string description = 14;
}

// ClusterRawConf represents raw data for K8S cluster configuration.
message ClusterRawConf {
  // name of user ssh key for ec2 instance connection
  string ssh_key_name = 1;
  // region is a AWS region name
  string region = 2;
  // number of AZ in selected region
  int32 num_of_az = 3;
  // type of the worker machine
  string machine_type = 4;
  // number of replicas for worker machine
  int32 machine_replicas = 5;
}

// ClusterConf represents a Kubernetes cluster configuration.
message ClusterConf {
  // name of user ssh key for ec2 instance connection
  string ssh_key_name = 1;
  // region is a AWS region name
  string region = 2;
  // number of AZ in selected region
  int32 num_of_az = 3;
  // type of the worker machine
  string machine_type = 4;
  // minimum number of worker node that can be scaled in
  int32 min_size_per_az = 5;
  // maximum number of worker node that can be scaled out
  int32 max_size_per_az = 6;
}

// AppServeApp represents each appServeApp.
message AppServeApp {
  //id for the application
  string id = 1;
  // application name
  string name = 2;
  // contract_id is a contract ID which this app belongs to
  string contract_id = 3;
  // type (build/deploy/all)
  string type = 4;
  // endpoint URL of deployed app
  string endpoint_url = 5;
  // target cluster to which the app is deployed
  string target_cluster_id = 6;
  // status is status of deployed app
  string status = 7;
  // created_at is  a creatioin timestamp for the application
  google.protobuf.Timestamp created_at = 8;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 9;
}

// AppServeAppTask represents each appServeApp task.
message AppServeAppTask {
  // task ID
  string id = 1;
  // ID for appServeApp that this task belongs to.
  string app_serve_app_id = 2;
  // application version
  string version = 3;
  // status is app status
  string status = 4;
  // output for task result
  string output = 5;
  // URL of java app artifact (Eg, Jar)
  string artifact_url = 6;
  // URL of built image for app
  string image_url = 7;
  // Executable path of app image
  string executable_path = 8;
  // java app profile
  string profile = 9;
  // java app port
  string port = 10;
  // resource spec of app pod
  string resource_spec = 11;
  // revision of deployed helm release
  int32 helm_revision = 12;
  // created_at is  a creatioin timestamp for the application
  google.protobuf.Timestamp created_at = 13;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 14;
}

// AppServeAppCombined represents each appServeApp with tasks included.
message AppServeAppCombined {
  // app_serve_app represent basic ASA info. 
  AppServeApp app_serve_app = 1;
  // tasks is a list of tasks that belongs to this ASA.
  repeated AppServeAppTask tasks = 2;
}

// IDRequest is a request with a id
message IDRequest {
  // id is a id to ask
  string id = 1;
}

// SimpleResponse returns a result for the request (the simplest return type)
message SimpleResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
}

// IDsResponse returns arry of ids
message IDsResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // ids is a array of ids
  repeated string ids = 3;
}

// IDResponse returns a id
message IDResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // id is a id
  string id = 3;
}

// KeycloakInfo represents a keycloak info.
message KeycloakInfo {
  // Id for cluster
  string cluster_id = 1;
  // Realm
  string realm = 2;
  // Client Id 
  string client_id = 3;
  // Secret key
  string secret = 4;
  // Private key
  string private_key = 5;
}
