/*
  Common.proto contains most commonly used interfaces 
  when communicating between TKS services.
*/
syntax = "proto3";
package pbgo;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/sktelecom/tks-proto/pbgo";

// Code is a response code for gRpc request.
enum Code {
  OK_UNSPECIFIED = 0;
  CANCELLED = 1;
  UNKNOWN = 2;
  INVALID_ARGUMENT = 3;
  DEADLINE_EXCEEDED = 4;
  NOT_FOUND = 5;
  ALREADY_EXISTS = 6;
  PERMISSION_DENIED = 7;
  UNAUTHENTICATED = 16;
  RESOURCE_EXHAUSTED = 8;
  FAILED_PRECONDITION = 9;
  ABORTED = 10;
  OUT_OF_RANGE = 11;
  UNIMPLEMENTED = 12;
  INTERNAL = 13;
  UNAVAILABLE = 14;
}

// Error represents a detailed error for gRPC request.
message Error {
  // msg is an error message.
  string msg = 1;
}

// AppGroupStatus represents a status of the application group
enum AppGroupStatus {
  APP_GROUP_UNSPECIFIED = 0;
  APP_GROUP_INSTALLING = 1;
  APP_GROUP_RUNNING = 2;
  APP_GROUP_DELETING = 4;
  APP_GROUP_DELETED = 5;
  APP_GROUP_ERROR = 6;
}

// ClusterStatus represents a status of the cluster
enum ClusterStatus {
  UNSPECIFIED = 0;
  INSTALLING = 1;
  RUNNING = 2;
  DELETING = 4;
  DELETED = 5;
  ERROR = 6;
}

// AppType is a type of application.
enum AppType {
  EP_UNSPECIFIED = 0;
  THANOS = 1;
  PROMETHEUS = 2;
  GRAFANA = 3;
  KIALI = 4;
  KIBANA = 5;
  ELASTICSERCH = 6;
  CLOUD_CONSOLE = 7;
  HORIZON = 8;
  JAEGER = 9;
  KUBERNETES_DASHBOARD = 10;
}

// AppGroupType is types of app group
enum AppGroupType {
  APP_TYPE_UNSPECIFIED = 0;
  LMA = 1;
  SERVICE_MESH = 2;
}

// AppGroup represents an application group such as LMA, ServiceMesh.
message AppGroup {
  // app_group_id for the application group
  string app_group_id = 1;
  // app_group_name is a human-readable name.
  string app_group_name = 2;
  // type (LMA/SERVICE_MESH)
  AppGroupType type = 3;
  // cluster_id is a cluster ID to install application.
  string cluster_id = 4;
  // a status of the application eg) Installing/Running/Error
  AppGroupStatus status = 5;
  // external_lable is the label used for globally unique identification
  string external_label = 6;
  // created_at is  a creatioin timestamp for the application
  google.protobuf.Timestamp created_at = 7;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 8;
}

// Application represents each Application.
message Application {
  //id for the application
  string app_id = 1;
  // type (Prometheus/Grafana/...)
  AppType type = 2;
  // app_group_id is an applicagion group ID.
  string app_group_id = 3;
  // endpoint is a endpoint string.
  string endpoint = 4;
  // metadata is a unstructured information for application.
  string metadata = 5;
  // created_at is  a creatioin timestamp for the application
  google.protobuf.Timestamp created_at = 6;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 7;
}

// Cluster represents each Cluster.
message Cluster {
  // is is a unique id for the cluster
  string id = 1;
  // name is a cluster name for users
  string name = 2;
  // created_at is a creatioin timestamp for the cluster
  google.protobuf.Timestamp created_at = 3;
  // updated_at is a timestamp for the trigger of status change
  google.protobuf.Timestamp updated_at  = 4;
  // status is a status of the cluste eg) Installing/Running/Error
  ClusterStatus status = 5;
  // contract_id is a contract ID.
  string contract_id = 6;
  // csp_id is an ID of CSPInfo.
  string csp_id = 7;
  // conf is a kubernete cluster configuration
  ClusterConf conf = 8;
  // app_groups is a array of applications
  repeated AppGroup app_groups = 9;
  // kubeconfig is a default kubeconfig for the cluster
  string kubeconfig = 10;
}

// ClusterConf represents a Kubernetes cluster configuration.
message ClusterConf {
  // master_flavor is a machine node spec flavor for the master nodes
  string master_flavor = 1;
  // master_replicas is a number of the master nodes
  int32 master_replicas = 2;
  // master_root_size is a root volume size of the master nodes
  int64 master_root_size = 3;
  // worker_flavor is a machine node spec flavor for the worker nodes
  string worker_flavor = 4;
  // worker_replicas is a number of the worker nodes
  int32 worker_replicas = 5;
  // worker_root_size is a root volume size of the worker nodes
  int64 worker_root_size = 6;
  // k8s_version is a kubernetes version for the cluster
  string k8s_version = 7;

  string region = 8;
}

// IDRequest is a request with a id
message IDRequest {
  // id is a id to ask
  string id = 1;
}

// SimpleResponse returns a result for the request (the simplest return type)
message SimpleResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
}

// IDsResponse returns arry of ids
message IDsResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // ids is a array of ids
  repeated string ids = 3;
}

// IDResponse returns a id
message IDResponse {
  // code is a response code.
  Code code = 1;
  // error is a detailed error message.
  Error error = 2;
  // id is a id
  string id = 3;
}


enum CspType {
  CSPTYPE_UNSPECIFIED = 0;
  AWS = 1;
  GCP = 2;
  AZURE = 3;
}

